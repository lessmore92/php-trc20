<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/contract/witness_contract.proto

namespace Protocol\VoteWitnessContract;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>protocol.VoteWitnessContract.Vote</code>
 */
class Vote extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes vote_address = 1;</code>
     */
    protected $vote_address = '';
    /**
     * Generated from protobuf field <code>int64 vote_count = 2;</code>
     */
    protected $vote_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $vote_address
     *     @type int|string $vote_count
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Core\Contract\WitnessContract::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes vote_address = 1;</code>
     * @return string
     */
    public function getVoteAddress()
    {
        return $this->vote_address;
    }

    /**
     * Generated from protobuf field <code>bytes vote_address = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setVoteAddress($var)
    {
        GPBUtil::checkString($var, False);
        $this->vote_address = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 vote_count = 2;</code>
     * @return int|string
     */
    public function getVoteCount()
    {
        return $this->vote_count;
    }

    /**
     * Generated from protobuf field <code>int64 vote_count = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setVoteCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->vote_count = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Vote::class, \Protocol\VoteWitnessContract_Vote::class);

