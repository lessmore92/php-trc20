<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/Tron.proto

namespace Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Inventory
 *
 * Generated from protobuf message <code>protocol.BlockInventory</code>
 */
class BlockInventory extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
     */
    private $ids;
    /**
     * Generated from protobuf field <code>.protocol.BlockInventory.Type type = 2;</code>
     */
    protected $type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Protocol\BlockInventory\BlockId[]|\Google\Protobuf\Internal\RepeatedField $ids
     *     @type int $type
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Core\Tron::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIds()
    {
        return $this->ids;
    }

    /**
     * Generated from protobuf field <code>repeated .protocol.BlockInventory.BlockId ids = 1;</code>
     * @param \Protocol\BlockInventory\BlockId[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Protocol\BlockInventory\BlockId::class);
        $this->ids = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.protocol.BlockInventory.Type type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.protocol.BlockInventory.Type type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Protocol\BlockInventory\Type::class);
        $this->type = $var;

        return $this;
    }

}

