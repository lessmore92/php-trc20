<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core/Tron.proto

namespace Protocol\Items;

use UnexpectedValueException;

/**
 * Protobuf type <code>protocol.Items.ItemType</code>
 */
class ItemType
{
    /**
     * Generated from protobuf enum <code>ERR = 0;</code>
     */
    const ERR = 0;
    /**
     * Generated from protobuf enum <code>TRX = 1;</code>
     */
    const TRX = 1;
    /**
     * Generated from protobuf enum <code>BLOCK = 2;</code>
     */
    const BLOCK = 2;
    /**
     * Generated from protobuf enum <code>BLOCKHEADER = 3;</code>
     */
    const BLOCKHEADER = 3;

    private static $valueToName = [
        self::ERR => 'ERR',
        self::TRX => 'TRX',
        self::BLOCK => 'BLOCK',
        self::BLOCKHEADER => 'BLOCKHEADER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ItemType::class, \Protocol\Items_ItemType::class);

